server: #服务端配置
  - name: a
    network: tcp #网络监听类型 tcp udp
    address: 0.0.0.0:6666 #服务监听地址ipv4/ipv6
    protocol: rpc #应用层协议 rpc http
    timeout: 3000 #请求最长处理时间 单位 毫秒
  - name: b
    network: tcp #网络监听类型 tcp udp
    address: 0.0.0.0:8888 #服务监听地址ipv4/ipv6
    protocol: http #应用层协议 rpc http
    timeout: 3000 #请求最长处理时间 单位 毫秒

client: #客户端调用的后端配置
  - name: mysql
    network: tcp
    protocol: http
    target:
    timeout:

default_log: #默认日志配置
  caller_skip: &caller 0 #控制log函数嵌套深度
  core_config:
    - &console
      level: debug #标准输出滚动日志的级别
      formatter: json #日志打印格式
      formatter_config:
        time_key: Time
        level_key: Level
        name_key: Name
        caller_key: Caller
        function_key: #Function
        message_key: Message
        stacktrace_key: Stacktrace
      writer: console #标准输出日志
      writer_config:
    - &file
      level: debug #本地文件滚动日志的级别
      formatter: json #日志打印格式
      formatter_config:
        time_key: Time
        level_key: Level
        name_key: Name
        caller_key: Caller
        function_key: #Function
        message_key: Message
        stacktrace_key: Stacktrace
      writer: file #本地文件日志
      writer_config:
        file_name: run.log #本地文件滚动日志文件名
        max_size: 128 #本地文件滚动日志的大小 单位 MB
        max_backups: 10 #最大日志文件数
        max_age: 7 #最大日志保留天数
        compress: false #日志文件是否压缩

frame_log: #框架日志配置
  caller_skip: *caller
  core_config:
    - <<: *console
      formatter: console
      formatter_config:
    - <<: *file
      formatter: console
      formatter_config:
      writer_config:
        file_name: ../log/frame.log
call_log: #调用日志配置
  caller_skip: *caller
  core_config:
    - <<: *console
    - <<: *file
      writer_config:
        file_name: ../log/call.log
run_log: #运行日志配置
  caller_skip: *caller
  core_config:
    - <<: *console
      formatter: console
      formatter_config:
    - <<: *file
      formatter: console
      formatter_config:
      writer_config:
        file_name: ../log/run.log
